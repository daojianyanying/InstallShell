docker compose的基本使用规则
测试docker compose的功能:
	import time

	import redis
	from flask import Flask

	app = Flask(__name__)
	cache = redis.Redis(host='redis', port=6379)

	def get_hit_count():
		retries = 5
		while True:
			try:
				return cache.incr('hits')
			except redis.exceptions.ConnectionError as exc:
				if retries == 0:
					raise exc
				retries -= 1
				time.sleep(0.5)

	@app.route('/')
	def hello():
		count = get_hit_count()
		return 'Hello World! I have been seen {} times.\n'.format(count)
		
	
	FROM python:3.7-alpine
	WORKDIR /code
	ENV FLASK_APP=app.py
	ENV FLASK_RUN_HOST=0.0.0.0
	RUN apk add --no-cache gcc musl-dev linux-headers
	COPY requirements.txt requirements.txt
	RUN pip install -r requirements.txt
	EXPOSE 5000
	COPY . .
	CMD ["flask", "run"]

	
1.启动完，应该有2个服务 redis_1 web_1
2.镜像 docker-compose 会下载所有的相关的镜像，并且会生成dockerfile对应的镜像，名为服务的名字 
3.docker service ls；文件名_服务名_num num是集群时对应的服务器编号
4.网络  docker-compose启动回为应用生成一个新的网络(docker network ls),名字为文件名_default
